cont_herido <- ordenado$x
clases_acc <- clases_acc[ordenado$ix]
# Conteo de solo daños ocurridos para cada clase
sub_dannos <- subset(accidentalidad_1, subset = (GRAVEDAD=="Solo daños"))
cont_danos <- table(sub_dannos$CLASE)
cont_danos <- cont_danos[2:7]
cont_danos <- as.data.frame(cont_danos)
cont_danos <- cont_danos$Freq
cont_danos <- cont_danos[ordenado$ix]
# Conteo de muertos ocurridos para cada clase
sub_muerto <- subset(accidentalidad_1, subset = (GRAVEDAD=="Muerto"))
cont_muerto <- table(sub_muerto$CLASE)
cont_muerto <- cont_muerto[2:7]
cont_muerto <- as.data.frame(cont_muerto)
cont_muerto <- cont_muerto$Freq
cont_muerto <- cont_muerto[ordenado$ix]
# GRÁFICO DE BARRAS -> CLASE DE ACCIDENTE VS GRAVEDAD DE ACCIDENTE
library(plotly)
data <- data.frame(clases_acc, cont_danos, cont_herido, cont_muerto)
data$clases_acc <- factor(data$clases_acc, levels = data[["clases_acc"]])
p <- plot_ly(data, x = ~data$clases_acc, y = ~data$cont_danos, type = 'bar', name = 'Solo daños') %>%
add_trace(y = ~data$cont_herido, name = 'Herido') %>%
add_trace(y = ~data$cont_muerto, name = 'Muerto')%>%
layout(yaxis = list(title = 'Cantidad de accidentes'), barmode = 'stack')
p
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
#contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
#contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$ID, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$ID <- sort(contAcc_comuna$ID, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, 30), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+2000, format(contAcc_comuna$ID), cex=0.7)
ymax <- max(contAcc_comuna$ID)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, (ymax+2000)), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
ymax <- max(contAcc_comuna$ID)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, (ymax+10000)), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
p
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$vale
data <- data.frame(x,y)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
#text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
p
levels(accidentalidad_1$GRAVEDAD)
knitr::opts_chunk$set(echo = TRUE)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~PERIODO*MES, data=accidentalidad_1, FUN=length)
conteo_muertes
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=accidentalidad_1, FUN=length)
conteo_muertes
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
conteo_muertes
library(ggplot2)
cont_muerto
conteo_muertes
names(conteo_muertes)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
library(ggplot2)
ggplot(conteo_muertes, aes(MES, ID, group = as.factor(PERIODO)))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
library(ggplot2)
ggplot(conteo_muertes, aes(MES, ID, col= as.factor(PERIODO)))
g1 <- ggplot(pg2, aes(fecha, precio, col = tipo)) g1 + geom_point() + geom_line() + ylim(0, 8200) + scale_x_date(date_breaks = "1 month", date_labels = "%B %Y") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_colour_manual(values = c("#82A5C5","#CE968F")) + labs(title = "Galón de venta al público en Antioquia (en $)", y = "Precio en pesos ($)", x = "Fecha")
ym1
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(x, ym1, ym2, ym3, ym4, ym5)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers')%>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers')%>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
p
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, name = "2014", type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~ym2, name = '2015') %>%
add_trace(y = ~ym3, name = '2016') %>%
add_trace(y = ~ym4, name = '2017') %>%
add_trace(y = ~ym5, name = '2018') %>%
layout(title = "Serie de tiempo - Cantidad de Muertes cada año",
xaxis = list(title = "Meses"),
yaxis = list (title = "Cantidad"))
p
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- c("Enero", "Febrero", "Marzo",
"Abril", "Mayo", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre",
"Noviembre", "Diciembre")
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
data$xm <- factor(data$xm, levels = data[["xm"]])
p <- plot_ly(data, x=~xm, y=~ym1, name = "2014", type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~ym2, name = '2015') %>%
add_trace(y = ~ym3, name = '2016') %>%
add_trace(y = ~ym4, name = '2017') %>%
add_trace(y = ~ym5, name = '2018') %>%
layout(title = "Serie de tiempo - Cantidad de Muertes cada año",
xaxis = list(title = "Meses"),
yaxis = list (title = "Cantidad de muertos"))
p
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
#text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
p
shiny::runApp('Especializacion en Analitica/Ciencia de los Datos/Trabajo_final_este_sí')
shiny::runApp('Especializacion en Analitica/Ciencia de los Datos/Trabajo_final_este_si')
guess_encoding(data2)
guess_encoding(accidentalidad)
load("~/Especializacion en Analitica/Ciencia de los Datos/Aplicaciones/final_app/.RData")
search()
searchpaths()
list.files()
getwd
getwd()
library(askpass)
detach("package:askpass", unload = TRUE)
args(sample)
hemp(sample)
help("sample")
log(10, 10)
log(10)
search()
searchpaths()
getwd()
cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx <- cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
dim(xxx)
dim(xxx)[1]
nrow(xxx)
length(xxx)
names(xxx)
xxx <- names(c('casing', 'repasign', 'seqasign'))
xxx
xxx <- cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx
names(xxx) <- c('casing', 'repasign', 'seqasign')
xxx
names(xxx)
xxx <- data.frame(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx
names(xxx) <- c('casing', 'repasign', 'seqasign')
xxx
names(XXX)
names(xxx)
length(xxx)
xxx$casing
xxx[[1]]
xxx[[1][2]]
xxx[[1,2]]
xxx[1,2]
xxx[1,3]
summary(xxx)
?switch
head(airquality)
search()
searchpath()
searchpaths()
x <- c(rep(1, 4), seq(2, 10, by=2), seq(10, 20, length=4))
x
y <- cbind(rep(1, 4), seq(2, 10, by=2), seq(10, 20, length=4))
y <- cbind(rep(1, 4), seq(2, 8, by=2), seq(10, 20, length=4))
y
mode(y)
class(y)
getwd()
help(cbind())
help(cbind
help(cbind)
help(cbind)
names(x)
y <- cbind(rep = rep(1, 4), seq1 = seq(2, 8, by=2), seq2=seq(10, 20, length=4))
y
names(y)
lengh(y)
lenght(y)
length(y)
rep(c(1,2), c(3, 4))
rep(seq(1,5, by=2), c(3, 4, 6))
rep(seq(1,5, by=2), rep(3,3))
nrow(y)
ncol(y)
class(y)
length(x)
x <- c(rep(1, 4), seq(2, 10, by=2), seq(10, 20, length=3))
x
length(x)
matrix(x, nrow=3, ncol=4, byrow=TRUE)
matrix(x, nrow=3, ncol=4, byrow=FALSE)
matrix(x, nrow=3, ncol=4, byrow=F)
matrix(x, nrow=3, ncol=4, byrow=T)
X <- matrix(x, nrow=3, ncol=4, byrow=T)
class(X)
mode(X)
dim(X)[1]
dim(X)[2]
nrow(x)
nrow(X)
ncol(X)
length(X)
setwd("~/Especializacion en Analitica/Data Analysis/5. Oil Pipeline Accidents")
oil_data <- read.csv('database.csv')
head(oil_data, 10)
length(oil_data)
dim(oil_data)[1]
dim(oil_data)[2]
length(oil_data)
help("length")
names(oil_data)
head(oil_data$Accident.Year)
head(oil_data[["Accident.Year"]])
head(oil_data[[3]])
oil_data[4, 5]
oil_data[4, 6]
oil_data[c(4,10,40), 6]
t(oil_data[c(4,10,40), 6])
summary(oil_data, rm.na=TRUE)
mode(oil_data)
class(oil_data)
col_type <- sapply(oil_data, class)
col_type
head(oil_data$Accident.Date.Time)
oil_data$Accident_date = oil_data$Accident.Date.Time
oil_data$Accident_date = as.POSIXct(oil_data$Accident_date, format="%d-%m-%Y %H-%M")
col_type <- sapply(oil_data, class)
col_type
dates_prove <- head(oil_data$Accident_date, 10)
weekdays(dates_prove)
oil_data$Accident_date2 = as.Date(oil_data$Accident.Date.Time)
dates_prove <- head(oil_data$Accident_date2, 10)
weekdays(dates_prove)
dates_prove
dates_prove <- head(oil_data$Accident_date, 10)
dates_prove2 <- head(oil_data$Accident_date2, 10)
dates_prove
oil_data$Accident_date2 = as.Date(oil_data$Accident.Date.Time, format='%d-%m-%Y')
dates_prove2 <- head(oil_data$Accident_date2, 10)
dates_prove2
head(oil_data$Accident_date2, 10)
oil_data$Accident_date2 = as.Date(oil_data$Accident.Date.Time, format='%d-%m-%Y %H-%M')
head(oil_data$Accident_date2, 10)
library(lubridate)
oil_data$Accident_date2 = dmy_hm(oil_data$Accident.Date.Time)
oil_data$Accident_date2 = as.character(oil_data$Accident.Date.Time)
oil_data$Accident_date2 = dmy_hm(oil_data$Accident_date2)
head(oil_data$Accident_date2)
mode(oil_data$Accident_date2)
oil_data$Accident_date <- oil_data$Accident.Date.Time
oil_data$Accident_date <- as.POSIXct(oil_data$Accident_date, format="%d-%m-%Y %H-%M")
dates_prove <- head(oil_data$Accident_date, 10)
dates_prove
head(oil_data$Accident_date)
oil_data$Accident_date <- oil_data$Accident.Date.Time
head(oil_data$Accident_date)
help("as.POSIXct")
oil_data$Accident_date <- as.POSIXct(oil_data$Accident_date, format="%d/%m/%Y %H:%M")
head(oil_data$Accident_date)
dates_prove <- head(oil_data$Accident_date, 10)
class(dates_prove)
weekdays(dates_prove)
months(dates_prove)
quarters(dates_prove)
diff(dates_prove)
difftime(dates_prove, as.POSIXct('1/1/2010 7:15', format="%d/%m/%Y %H:%M"))
dates_2 <- seq (as.Date(“2015-01-01”, format="%Y-%m-%d"), as.Date(“2015-12-01”, format="%Y-%m-%d"), by = 'month')
dates_2 <- seq(as.Date(“2015-01-01”, format="%Y-%m-%d"), as.Date(“2015-12-01”, format="%Y-%m-%d"), by = 'month')
dates_2 <- seq(as.Date('2015-01-01', format="%Y-%m-%d"), as.Date("2015-12-01”, format="%Y-%m-%d"), by = 'month')
dates_2 <- seq(as.Date('2015-01-01', format="%Y-%m-%d"), as.Date('2015-12-01', format="%Y-%m-%d"), by = 'month')
dates_2
class(dates_2)
mode(dates_2)
dates_2+years(1)
dates_2+month(1)
dates_2+months(1)
ratings <- c('poor', 'average', 'good')
myR <- sample(ratings, 20, replace=TRUE)
myR
sample(ratings, 20, replace=FALSE)
sample(ratings, 20)
mode(myR)
class(myR)
RatingFactor<-factor(myR)
class(myR)
mode(myR)
myR
RatingFactor <- factor(myR)
RatingFactor
class(RatingFactor)
mode(RatingFactor)
levels(RatingFactor) <- c('average', 'very bad', 'mamaguevo')
RatingFactor
names(oil_data)
mode(oil_data$Net.Loss..Barrels.)
max(oil_data$Net.Loss..Barrels)
min(oil_data$Net.Loss..Barrels)
cutter <- cut(oil_data$Net.Loss..Barrels, breaks=50)
head(cutter, 10)
args(cut)
args(factor)
args(sample)
range(oil_data$Net.Loss..Barrels)
mean(oil_data$Net.Loss..Barrels)
median(oil_data$Net.Loss..Barrels)
sd(oil_data$Net.Loss..Barrels)
var(oil_data$Net.Loss..Barrels)
sample1 <- sample(ratings, 20, replace=TRUE)
sample1
sample2 <- sample(ratings, 20, replace=TRUE)
sample2
set.seed(1)
sample1 <- sample(ratings, 20, replace=TRUE)
sample2 <- sample(ratings, 20, replace=TRUE)
sample1
sample2
set.seed(20)
help(set.seed)
sample(ratings, 20, replace=TRUE)
sample(ratings, 20, replace=TRUE)
sample(ratings, 20, replace=TRUE)
set.seed(0)
sample(ratings, 20, replace=TRUE)
set.seed(0)
sample(ratings, 20, replace=TRUE)
sample(ratings, 20, replace=TRUE)
set.seed(0)
sample(ratings, 20, replace=TRUE)
nchar('samantha')
nchar('nataly mosquera mosquer')
nchar('nataly mosquera mosquera')
nata <- 'nataly mosquera mosquera'
substring(data, 1, 6)
substring(nata, 1, 6)
substring(nata, c(1,8), c(6,15))
substring(nata, c(1,8, 17), c(6,15,24))
nata <- rep('Nataly', 3)
nata
paste(nata, "& Janick")
amor <- paste(nata, "& Janick")
paste(nata, "& Janick", sep='<3')
paste(nata, " & Janick", sep='<3')
paste(nata, " & Janick", sep=' <3')
grep('poor', ratings)
grep('poor', ratings, value=TRUE)
grep('o{2}', ratings, value=TRUE)
grep('a{2}', ratings, value=TRUE)
grep('a$', ratings, value=TRUE)
grep('e$', ratings, value=TRUE)
grep('^a', ratings, value=TRUE)
gsub('Nataly', 'Mi Coshita', amor)
