data <- data.frame(clases_acc, cont_danos, cont_herido, cont_muerto)
data$clases_acc <- factor(data$clases_acc, levels = data[["clases_acc"]])
p <- plot_ly(data, x = ~data$clases_acc, y = ~data$cont_danos, type = 'bar', name = 'Solo daños') %>%
add_trace(y = ~data$cont_herido, name = 'Herido') %>%
add_trace(y = ~data$cont_muerto, name = 'Muerto')%>%
layout(yaxis = list(title = 'Cantidad de accidentes'), barmode = 'stack')
p
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
#contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
#contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$ID, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$ID <- sort(contAcc_comuna$ID, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, 30), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+2000, format(contAcc_comuna$ID), cex=0.7)
ymax <- max(contAcc_comuna$ID)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, (ymax+2000)), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
ymax <- max(contAcc_comuna$ID)
bp0 <- barplot(contAcc_comuna$ID, main = "Porcentaje de accidentalidad según comuna", names.arg = contAcc_comuna$COMUNA_V2, las =2, ylim = c(0, (ymax+10000)), horiz = FALSE,
ylab = "Porcentaje de accidentalidad", col = "deepskyblue4", border = "turquoise4", cex.names = 0.7, cex.axis = 0.6)
text(bp0, contAcc_comuna$ID+3, format(contAcc_comuna$ID), cex=0.7)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$ID
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
p
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$vale
data <- data.frame(x,y)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
#text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
p
levels(accidentalidad_1$GRAVEDAD)
knitr::opts_chunk$set(echo = TRUE)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~PERIODO*MES, data=accidentalidad_1, FUN=length)
conteo_muertes
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=accidentalidad_1, FUN=length)
conteo_muertes
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
conteo_muertes
library(ggplot2)
cont_muerto
conteo_muertes
names(conteo_muertes)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
library(ggplot2)
ggplot(conteo_muertes, aes(MES, ID, group = as.factor(PERIODO)))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
library(ggplot2)
ggplot(conteo_muertes, aes(MES, ID, col= as.factor(PERIODO)))
g1 <- ggplot(pg2, aes(fecha, precio, col = tipo)) g1 + geom_point() + geom_line() + ylim(0, 8200) + scale_x_date(date_breaks = "1 month", date_labels = "%B %Y") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + scale_colour_manual(values = c("#82A5C5","#CE968F")) + labs(title = "Galón de venta al público en Antioquia (en $)", y = "Precio en pesos ($)", x = "Fecha")
ym1
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(x, ym1, ym2, ym3, ym4, ym5)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers')%>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers')%>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, type = 'scatter', mode = 'lines+markers') %>%
layout(title = "Serie de tiempo - Tipo de accidente",
xaxis = list(title = ""),
yaxis = list (title = "Porcentaje"))
p
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- unique(conteo_muertes$MES)
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
p <- plot_ly(data, x=~xm, y=~ym1, name = "2014", type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~ym2, name = '2015') %>%
add_trace(y = ~ym3, name = '2016') %>%
add_trace(y = ~ym4, name = '2017') %>%
add_trace(y = ~ym5, name = '2018') %>%
layout(title = "Serie de tiempo - Cantidad de Muertes cada año",
xaxis = list(title = "Meses"),
yaxis = list (title = "Cantidad"))
p
library(plotly)
# CANTIDAD DE MUERTES POR AÑO
muertes <- subset(accidentalidad_1, subset=(GRAVEDAD == "Muerto"))
conteo_muertes <- aggregate(ID~MES*PERIODO, data=muertes, FUN=length)
xm <- c("Enero", "Febrero", "Marzo",
"Abril", "Mayo", "Junio", "Julio",
"Agosto", "Septiembre", "Octubre",
"Noviembre", "Diciembre")
ym1 <- conteo_muertes$ID[1:12]
ym2 <- conteo_muertes$ID[13:24]
ym3 <- conteo_muertes$ID[25:36]
ym4 <- conteo_muertes$ID[37:48]
ym5 <- conteo_muertes$ID[49:60]
data <- data.frame(xm, ym1, ym2, ym3, ym4, ym5)
data$xm <- factor(data$xm, levels = data[["xm"]])
p <- plot_ly(data, x=~xm, y=~ym1, name = "2014", type = 'scatter', mode = 'lines+markers') %>%
add_trace(y = ~ym2, name = '2015') %>%
add_trace(y = ~ym3, name = '2016') %>%
add_trace(y = ~ym4, name = '2017') %>%
add_trace(y = ~ym5, name = '2018') %>%
layout(title = "Serie de tiempo - Cantidad de Muertes cada año",
xaxis = list(title = "Meses"),
yaxis = list (title = "Cantidad de muertos"))
p
contAcc_comuna <- aggregate(ID ~ COMUNA_V2, data = accidentalidad_1, FUN = length)
total <- length(accidentalidad_1$PERIODO)
contAcc_comuna$value <- round((contAcc_comuna$ID/total)*100,2)
ordenado <- sort(contAcc_comuna$value, decreasing = TRUE, index.return = TRUE)
contAcc_comuna$value <- sort(contAcc_comuna$value, decreasing = TRUE, index.return=FALSE)
contAcc_comuna$COMUNA_V2 <- contAcc_comuna$COMUNA_V2[ordenado$ix]
x <- contAcc_comuna$COMUNA_V2
y <- contAcc_comuna$value
data <- data.frame(x,y)
data$x <- factor(data$x, levels = data[["x"]])
p <- plot_ly(data, x = ~x, y = ~y, type = 'bar', name = 'Solo daños')
#text(p, contAcc_comuna$value+3, paste(format(contAcc_comuna$value), "%"), cex=0.7)
p
shiny::runApp('Especializacion en Analitica/Ciencia de los Datos/Trabajo_final_este_sí')
shiny::runApp('Especializacion en Analitica/Ciencia de los Datos/Trabajo_final_este_si')
guess_encoding(data2)
guess_encoding(accidentalidad)
load("~/Especializacion en Analitica/Ciencia de los Datos/Aplicaciones/final_app/.RData")
search()
searchpaths()
list.files()
getwd
getwd()
library(askpass)
detach("package:askpass", unload = TRUE)
args(sample)
hemp(sample)
help("sample")
log(10, 10)
log(10)
search()
searchpaths()
getwd()
cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx <- cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
dim(xxx)
dim(xxx)[1]
nrow(xxx)
length(xxx)
names(xxx)
xxx <- names(c('casing', 'repasign', 'seqasign'))
xxx
xxx <- cbind(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx
names(xxx) <- c('casing', 'repasign', 'seqasign')
xxx
names(xxx)
xxx <- data.frame(c(1,3,4), rep(1,3), seq(7,9,by=1))
xxx
names(xxx) <- c('casing', 'repasign', 'seqasign')
xxx
names(XXX)
names(xxx)
length(xxx)
xxx$casing
xxx[[1]]
xxx[[1][2]]
xxx[[1,2]]
xxx[1,2]
xxx[1,3]
summary(xxx)
?switch
head(airquality)
library(XLConnect)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(leaflet)
library(htmltools)
library(RColorBrewer)
library(kableExtra)
library(gridExtra)
medical_cost <- read.csv("insurance.csv", header=TRUE, sep=',', encoding="UTF-8")
dt <- head(medical_cost)
kable(dt) %>%
kable_styling(bootstrap_options = c("hover", "condensed"), full_width = F) %>%
scroll_box(width = "500px", height = "250px")
## counting the num of NA values in each column
na_values <- colSums(is.na(medical_cost))
## checking the type of attribute in each column
col_type <- sapply(medical_cost, class)
###
type_values <- data.frame(na_values, col_type)
kable(type_values) %>%
kable_styling(bootstrap_options = c("hover", "condensed"), full_width = F) %>%
scroll_box(width = "400px", height = "250px")
stats <- summary(medical_cost[c('age', 'bmi', 'charges')])
stats
## Age distribution
x <- medical_cost$age
hist(x, col='lightblue', main='Age Distribution', xlab='Age')
## charges distribution by age under and over 39.
age1 <- filter(medical_cost, age < 39)
age2 <- filter(medical_cost, age > 39)
par(mfrow=c(1,2))
hist(age1$charges, col='darkgreen', main='Charges Distribution by Age < 39', xlab='Charges')
hist(age2$charges, col='deeppink', main='Charges Distribution by Age < 39', xlab='Charges')
# age vs charges vs sex
qplot(x=age, y=charges, data=medical_cost, color=sex, main='Charges by Age and Sex')
## charges distribution by sex
boxplot(charges~sex, data=medical_cost, main='Charges Behavior by Sex', horizontal=TRUE, ylab='Sex')
#bmi distribution
qplot(bmi, data=medical_cost, geom='histogram', main='BMI Distribution', xlab='BMI')
## bmi distribution
bmi1 <- filter(medical_cost, bmi < 30)
bmi2 <- filter(medical_cost, bmi > 30)
par(mfrow=c(1,2))
hist(bmi1$charges, main='Charges Distribution BMI <30', xlab='Charges', col='orange')
hist(bmi2$charges, main='Charges Distribution BMI >30', xlab='Charges', col='lightblue')
# scatter plot bmi vs charges
qplot(bmi, charges, data=medical_cost, main='BMI vs Charges', col=smoker)
#violin plot smoker vs charges
qplot(smoker, charges, data=medical_cost, main='Smoker Violin Plot', geom='violin', col=smoker, fill=smoker)
children_count <- aggregate(age ~ children, data=medical_cost, FUN=length)
p <- ggplot(data=children_count, aes(x=children, y=age))+geom_bar(stat='identity')
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges))+geom_bar(stat='identity')
p
## blopxplot charges by children number
qplot(as.factor(children), charges, data=medical_cost, geom='boxplot', main='Charges Comparison by Children Number',
xlab='Children Number')
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges, color='palegreen2'))+geom_bar(stat='identity')
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges, color='palegreen2'))+geom_bar(stat='identity', fill="#FF9999")
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges, color='palegreen2'))+geom_bar(stat='identity',                     fill=c("#FF9999". "#FF9999", "#FF9999", "#FF9999", "black", "black")
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges, color='palegreen2'))+geom_bar(stat='identity')
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges))+geom_bar(stat='identity')
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges))+geom_bar(stat='identity', fill="#000099")
p
## blopxplot charges by children number
qplot(as.factor(children), charges, data=medical_cost, geom='boxplot', main='Charges Comparison by Children Number',
xlab='Children Number', fill=as.factor(children))
medical_cost$charges[medical_cost$sex == 'female']
medical_cost$charges[medical_cost$sex == 'male']
par(mfrow=c(2,2))
hist(medical_cost$charges[medical_cost$region == 'southwest'], main='Southwest Region')
hist(medical_cost$charges[medical_cost$region == 'southeast'], main='Southeast Region')
hist(medical_cost$charges[medical_cost$region == 'northwest'], main='Northwest Region')
hist(medical_cost$charges[medical_cost$region == 'northeast'], main='Northeast Region')
par(mfrow=c(2,2))
hist(medical_cost$charges[medical_cost$region == 'southwest'], main='Southwest Region', xlab='Charges', color='lightgreen')
hist(medical_cost$charges[medical_cost$region == 'southeast'], main='Southeast Region', xlab='Charges', color='purple')
hist(medical_cost$charges[medical_cost$region == 'northwest'], main='Northwest Region', xlab='Charges', color='orange')
hist(medical_cost$charges[medical_cost$region == 'northeast'], main='Northeast Region', xlab='Charges', color='yellow')
par(mfrow=c(2,2))
hist(medical_cost$charges[medical_cost$region == 'southwest'], main='Southwest Region', xlab='Charges', col='lightgreen')
hist(medical_cost$charges[medical_cost$region == 'southeast'], main='Southeast Region', xlab='Charges', col='purple')
hist(medical_cost$charges[medical_cost$region == 'northwest'], main='Northwest Region', xlab='Charges', col='orange')
hist(medical_cost$charges[medical_cost$region == 'northeast'], main='Northeast Region', xlab='Charges', col='yellow')
#bmi distribution
qplot(medical_cost$bmi, geom='histogram', main='BMI Distribution', xlab='BMI')
pl1 <- qplot(medical_cost$charges[medical_cost$region == 'southwest'], manin='plt1')
pl2 <- qplot(medical_cost$charges[medical_cost$region == 'southeast'], manin='plt2')
grid.arrange(grobs=c(pl, pl2), ncol=2)
pl1 <- qplot(medical_cost$charges[medical_cost$region == 'southwest'], manin='plt1')
pl2 <- qplot(medical_cost$charges[medical_cost$region == 'southeast'], manin='plt2')
grid.arrange(grobs=c(pl1, pl2), ncol=2)
pl1 <- qplot(medical_cost$charges[medical_cost$region == 'southwest'], manin='plt1')
pl2 <- qplot(medical_cost$charges[medical_cost$region == 'southeast'], manin='plt2')
pl1
pl1 <- qplot(medical_cost$charges[medical_cost$region == 'southwest'], manin='plt1')
pl2 <- qplot(medical_cost$charges[medical_cost$region == 'southeast'], manin='plt2')
grid.arrange(grobs=c(pl1, pl2), ncol=1)
pl1 <- qplot(medical_cost$charges[medical_cost$region == 'southwest'], manin='plt1')
pl2 <- qplot(medical_cost$charges[medical_cost$region == 'southeast'], manin='plt2')
grid.arrange(grobs=c(pl1, pl2), nrow=1)
heatmap(medical_cost)
heatmap(medical_cost['age', 'bmi', 'charges'])
heatmap(medical_cost[['age', 'bmi', 'charges']])
heatmap(medical_cost[c('age', 'bmi', 'charges')])
cor(medical_cost)
cor(medical_cost[c('age', 'bmi', 'charges')])
data_cor <- cor(medical_cost[c('age', 'bmi', 'charges')])
heatmap(data_cor)
data_cor <- cor(medical_cost[c('age', 'bmi', 'charges')])
heatmap(data_cor)
library(tidyverse)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(leaflet)
library(htmltools)
library(RColorBrewer)
library(kableExtra)
library(gridExtra)
setwd("~/Especializacion en Analitica/Data-Analysis/6. Medical Cost Personal")
# scatter plot bmi vs charges
qplot(bmi, charges, data=medical_cost, main='BMI vs Charges', col=smoker)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
library(leaflet)
library(htmltools)
library(RColorBrewer)
library(kableExtra)
library(gridExtra)
medical_cost <- read.csv("insurance.csv", header=TRUE, sep=',', encoding="UTF-8")
dt <- head(medical_cost)
kable(dt) %>%
kable_styling(bootstrap_options = c("hover", "condensed"), full_width = F) %>%
scroll_box(width = "500px", height = "250px")
## counting the num of NA values in each column
na_values <- colSums(is.na(medical_cost))
## checking the type of attribute in each column
col_type <- sapply(medical_cost, class)
###
type_values <- data.frame(na_values, col_type)
kable(type_values) %>%
kable_styling(bootstrap_options = c("hover", "condensed"), full_width = F) %>%
scroll_box(width = "400px", height = "250px")
stats <- summary(medical_cost[c('age', 'bmi', 'charges')])
stats
## Age distribution
x <- medical_cost$age
hist(x, col='lightblue', main='Age Distribution', xlab='Age')
## charges distribution by age under and over 39.
age1 <- filter(medical_cost, age < 39)
age2 <- filter(medical_cost, age > 39)
par(mfrow=c(1,2))
hist(age1$charges, col='darkgreen', main='Charges Distribution by Age < 39', xlab='Charges')
hist(age2$charges, col='deeppink', main='Charges Distribution by Age < 39', xlab='Charges')
# age vs charges vs sex
qplot(x=age, y=charges, data=medical_cost, color=sex, main='Charges by Age and Sex')
## charges distribution by sex
boxplot(charges~sex, data=medical_cost, main='Charges Behavior by Sex', horizontal=TRUE, ylab='Sex')
#bmi distribution
qplot(medical_cost$bmi, geom='histogram', main='BMI Distribution', xlab='BMI')
## bmi distribution
bmi1 <- filter(medical_cost, bmi < 30)
bmi2 <- filter(medical_cost, bmi > 30)
par(mfrow=c(1,2))
hist(bmi1$charges, main='Charges Distribution BMI <30', xlab='Charges', col='orange')
hist(bmi2$charges, main='Charges Distribution BMI >30', xlab='Charges', col='lightblue')
# scatter plot bmi vs charges
qplot(bmi, charges, data=medical_cost, main='BMI vs Charges', col=smoker)
#violin plot smoker vs charges
qplot(smoker, charges, data=medical_cost, main='Smoker Violin Plot', geom='violin', col=smoker, fill=smoker)
children_count <- aggregate(age ~ children, data=medical_cost, FUN=length)
p <- ggplot(data=children_count, aes(x=children, y=age))+geom_bar(stat='identity')
p
charges_children <- aggregate(charges ~ children, data=medical_cost, FUN=mean)
p <- ggplot(data=charges_children, aes(x=children, y=charges))+geom_bar(stat='identity', fill="#000099")
p
## blopxplot charges by children number
qplot(as.factor(children), charges, data=medical_cost, geom='boxplot', main='Charges Comparison by Children Number',
xlab='Children Number', fill=as.factor(children))
par(mfrow=c(2,2))
hist(medical_cost$charges[medical_cost$region == 'southwest'], main='Southwest Region', xlab='Charges', col='lightgreen')
hist(medical_cost$charges[medical_cost$region == 'southeast'], main='Southeast Region', xlab='Charges', col='purple')
hist(medical_cost$charges[medical_cost$region == 'northwest'], main='Northwest Region', xlab='Charges', col='orange')
hist(medical_cost$charges[medical_cost$region == 'northeast'], main='Northeast Region', xlab='Charges', col='yellow')
data_cor <- cor(medical_cost[c('age', 'bmi', 'charges')])
heatmap(data_cor)
dt <- head(medical_cost)
kable(dt) %>%
kable_styling(bootstrap_options = c("hover", "condensed"), full_width = F) %>%
scroll_box(width = "500px", height = "250px")
